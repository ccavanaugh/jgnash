plugins {
    id("com.github.ben-manes.versions")
}

allprojects {
    apply plugin: "java"

    sourceCompatibility = 11
    targetCompatibility = 11

    group = "jgnash"
    version = "3.5.0"

    project.ext {
        junitVersion = "5.6.0"              // https://junit.org/junit5/
        junitExtensionsVersion = "2.3.0"    // https://github.com/glytching/junit-extensions
        awaitilityVersion = "4.0.2"         // https://github.com/awaitility/awaitility

        picocliVersion = "4.1.4"            // https://github.com/remkop/picocli

        apachePoiVersion = "4.1.1"          // https://poi.apache.org/
        commonsCsvVersion = "1.7"           // https://commons.apache.org/proper/commons-csv/
        commonsCollectionsVersion = "4.4"   // https://commons.apache.org/proper/commons-collections/
        commonsTextVersion = "1.8"          // https://commons.apache.org/proper/commons-text/
        commonsLangVersion = "3.9"          // https://commons.apache.org/proper/commons-lang/
        commonsMathVersion = "3.6.1"        // https://commons.apache.org/proper/commons-math/

        h2Version = "1.4.200"               // http://www.h2database.com/html/main.html
        hsqldbVersion = "2.4.1"             // http://hsqldb.org/

        xstreamVersion = "1.4.11.1"         // https://github.com/x-stream/xstream

        hibernateVersion = "5.4.10.Final"   // http://hibernate.org/orm/
        hikariVersion = "3.4.2"             // https://github.com/brettwooldridge/HikariCP

        pdfBoxVersion = "2.0.18"            // https://pdfbox.apache.org/

        nettyVersion = "4.1.45.Final"       // https://netty.io/index.html

        slf4jVersion = "1.8.0-beta4"        // https://www.slf4j.org/news.html

        javaFXVersion = "14-ea+8"
    }
}

subprojects {
    repositories {
        mavenCentral()
        jcenter()
        mavenLocal()
    }

    dependencies {
        testImplementation("org.junit.jupiter:junit-jupiter-api:$junitVersion")
        testImplementation("org.junit.jupiter:junit-jupiter-params:$junitVersion")
        testRuntimeOnly("org.junit.jupiter:junit-jupiter-engine:$junitVersion")

        testImplementation("io.github.glytching:junit-extensions:$junitExtensionsVersion")
        testImplementation("org.awaitility:awaitility:$awaitilityVersion")
        testImplementation("org.apache.commons:commons-text:$commonsTextVersion")
    }

    test {
        useJUnitPlatform()

        //we want display the following test events
        testLogging {
            events("PASSED", "STARTED", "FAILED", "SKIPPED")
            showStandardStreams = true
        }
    }
}

wrapper {
    gradleVersion = "6.0.1"
}

task distZip {
    doLast {
        ant.zip(destfile: "jgnash-" + version + "-bin.zip", duplicate: "preserve", update: "false") {
            zipgroupfileset(dir: ".", includes: "jgnash-fx/build/distributions/jGnash-" + version + ".zip")
            zipgroupfileset(dir: ".", includes: "bootloader/build/distributions/jGnash-" + version + ".zip")
        }
    }
}

distZip.dependsOn(":jgnash-fx:distZip")
distZip.dependsOn(":bootloader:distZip")
