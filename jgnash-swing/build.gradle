plugins {
    id 'edu.sc.seis.launch4j' version '2.4.2'
}

apply plugin: 'distribution'
apply plugin: 'application' // creates task to run full application

description = 'jGnash Swing'
mainClassName = "jgnash.Main"

dependencies {

    compile project(':jgnash-core')
    compile project(':jgnash-convert')
    compile project(':jgnash-help')
    compile project(':jgnash-report-core')
    compile project(':jgnash-plugin')
    compile project(':jidesoft')

    compile group: 'net.sf.jopt-simple', name: 'jopt-simple', version: joptSimpleVerion

    compile(group: 'org.jfree', name: 'jfreechart', version: jfreeChartVersion) {
        exclude(module: 'xml-apis')
        exclude(module: 'bcmail-jdk14')
        exclude(module: 'bcprov-jdk14')
        exclude(module: 'itext')
    }

    compile(group: 'com.github.insubstantial', name: 'substance-swingx', version: substanceVersion) {
        exclude(module: 'swingx-core')
    }
    compile group: 'com.github.insubstantial', name: 'substance', version: substanceVersion

    compile group: 'org.swinglabs.swingx', name: 'swingx-core', version: swingxVersion

    compile group: 'com.jgoodies', name: 'jgoodies-common', version: '1.8.1'
    compile group: 'com.jgoodies', name: 'jgoodies-forms', version: '1.8.0'
    compile group: 'com.jgoodies', name: 'jgoodies-looks', version: '2.7.0'
}

launch4j {
    copyright = 'Copyright (C) 2001-2017 Craig Cavanaugh'
    mainClassName = 'jgnash.Main'
    outfile = 'jGnash2.exe'
    dontWrapJar = true
    icon = '../../gnome-money.ico'
}

// call launch4j prior to creating the zip file
distZip.dependsOn(createExe)

// build the mt940 plugin prior to creating the zip file without creating a circular loop
distZip.dependsOn(":mt940:build")


distZip.dependsOn(":jgnash-help:asciidoctor")

distZip {
    into("jGnash-$version") {
        from '.'
        include 'scripts/*'
    }

    into("jGnash-$version") {
        from '../mt940/build/libs'
        include '*'
        into "jGnash-$version/plugins"
    }

    doLast {
        file("$destinationDir/$archiveName").renameTo("$destinationDir/"+'jGnashSwing-'+version+'.zip')
    }
}

distributions {
    main {
        baseName = 'jGnash'
        contents {
            from { '../jgnash-help/build/asciidoc/pdf/Manual.pdf' }
            from { '../changelog.adoc' }
            from { 'build/launch4j/jGnash2.exe' }
            from { '../README.html' }
            from { '../README.adoc' }
            from { '../jGnash2' }
        }
    }
}

jar {
    // Keep jar clean:
    exclude 'META-INF/*.SF', 'META-INF/*.DSA', 'META-INF/*.RSA', 'META-INF/*.MF'

    manifest {
        attributes  'Main-Class': 'jgnash.Main',
                'Class-Path': configurations.runtime.files.collect { "lib/$it.name" }.join(' ')
    }
}